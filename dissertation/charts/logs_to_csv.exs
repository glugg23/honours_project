#!/usr/bin/env elixir

# A script to turn the logs generated by `docker compose -f docker-compose.yml up > logs.txt` into a csv file

[filename, experiment, run | _] = System.argv()
output = "experiment#{experiment}.csv";

content = File.read!(filename)
  |> String.split("\n")
  |> Enum.filter(&String.contains?(&1, "MEASURE"))
  |> Enum.map(fn line ->
    [_, line] = String.split(line, "|")
    String.trim(line)
  end)
  |> Enum.map(&String.replace(&1, ~r/info|MEASURE=|\[|\]/i, ""))
  |> Enum.map(&String.replace(&1, ~r/\s+/, ","))

[start_time | _] = headers = Enum.at(content, 0) |> String.split(",")
headers = List.update_at(headers, 0, fn _ -> "time" end)
content = List.update_at(content, 0, fn _ -> Enum.join(headers, ",") end)

content = Enum.map(content, fn line ->
    [time, round, cpu_usage, memory] = String.split(line, ",")

    case Integer.parse(round) do
      {_value, ""} -> Enum.join([run, round, cpu_usage, memory, time], ",")
      :error ->
        unless File.exists?(output) do
          Enum.join(["run", round, cpu_usage, memory, time], ",")
        else
          ""
        end
    end
  end)
  |> List.insert_at(1, "#{run},0,0,0,#{start_time}")
  |> Enum.join("\n")

File.write!(output, content, [:append])
